{"mappings":"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","sources":["skirt_drawing.js"],"sourcesContent":["//const n = 100;\r\nconst DI = 70;\r\n//size40\r\nconst OB = 86;\r\nconst VB = 18;\r\nconst OT = 60;\r\n\r\n\r\nvar height = 1000,\r\n    width = 1000,\r\n    margin = 100;\r\n\r\nvar svg = d3.select('body').append('svg')\r\n    .attr('class', 'axis')\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height);\r\n\r\n\r\nvar xAxisLenght = width - 2*margin;\r\nvar yAxisLength = height - 2*margin;\r\n\r\nvar scaleX = d3.scale.linear()\r\n    .domain([0,100])\r\n    .range([0, xAxisLenght]);\r\n\r\nvar scaleY = d3.scale.linear()\r\n    .domain([0,100])\r\n    .range([0, yAxisLength]);\r\n\r\nvar xAxis = d3.svg.axis()\r\n    .scale(scaleX)\r\n    .orient(\"top\");\r\nvar yAxis = d3.svg.axis()\r\n    .scale(scaleY)\r\n    .orient(\"left\");\r\n\r\nsvg.append(\"g\")\r\n    .attr(\"class\",\"x-axis\")\r\n    .attr(\"transform\",\r\n        \"translate(100,100)\")\r\n    .call(xAxis);\r\nsvg.append(\"g\")\r\n    .attr(\"class\",\"y-axis\")\r\n    .attr(\"transform\",\r\n        \"translate(\" + margin + \",\" + margin +\")\")\r\n    .call(yAxis);\r\n\r\nd3.selectAll(\"g.x-axis g.tick\")\r\n    .append(\"line\")\r\n    .classed(\"grid-line\", true)\r\n    .attr(\"x1\",0)\r\n    .attr(\"y1\",0)\r\n    .attr(\"x2\",0)\r\n    .attr(\"y2\",yAxisLength);\r\nd3.selectAll(\"g.y-axis g.tick\")\r\n    .append(\"line\")\r\n    .classed(\"grid-line\", true)\r\n    .attr(\"x1\", 0)\r\n    .attr(\"y1\", 0)\r\n    .attr(\"x2\", xAxisLenght)\r\n    .attr(\"y2\", 0);\r\n\r\n\r\n\r\n// координаты сетки\r\nlet A = {x: 0, y: 0};\r\nlet A1 = {x: 0.5*OB +1, y: 0};\r\nlet H = {x: 0, y: DI};\r\nlet H1 = {x: 0.5*OB +1, y: DI};\r\nlet A2 = {x: (0.5*OB +1)*0.5, y: 0};\r\nlet H2 = {x: (0.5*OB +1)*0.5, y: DI};\r\nlet B = {x: 0, y: VB};\r\nlet B1 = {x: 0.5*OB +1, y: VB};\r\nlet B2 = {x: (0.5*OB +1)*0.5, y: VB};\r\n\r\n//C, C1, C2\r\nfull_additions = (OB - OT)/2;\r\nside_additions = full_additions/2;\r\n\r\nlet C = {x: (0.5*OB +1)*0.5, y: -1};\r\nlet C1 = {x: (0.5*OB +1)*0.5-side_additions/2, y: -1};\r\nlet C2 = {x: (0.5*OB +1)*0.5+side_additions/2, y: -1};\r\n// draw lines A2C, CC1, CC2\r\n\r\n// Bezie draw lines B2C1, B2C2\r\n\r\n//\r\n\r\nrawData = [\r\n    //{x:0, y:0}, {x:86, y:0}, {x:0, y:90}, {x:86, y:90},\r\n   A,A2, A1,B1, H1, H2, H, B, A\r\n],\r\n    data =[];\r\n\r\n//\r\nfor (i = 0; i<rawData.length;i++)\r\n    data.push({x:scaleX(rawData[i].x)+margin, y:scaleY(rawData[i].y)+margin});\r\n\r\n///\r\nvar line = d3.svg.line()\r\n    .x(function(d){return d.x;})\r\n    .y(function(d){return d.y;});\r\n\r\nvar g = svg.append(\"g\");\r\ng.append(\"path\")\r\n    .attr(\"d\", line(data))\r\n    .style(\"stroke\", \"steelblue\")\r\n    .style(\"stroke-width\", 2);\r\n\r\n// добавляем отметки к точкам\r\nsvg.selectAll(\".dot\")\r\n    .data(rawData)\r\n    .enter().append(\"circle\")\r\n    .attr(\"class\", \"dot\")\r\n    .attr(\"r\", 5.5)\r\n    .attr(\"cx\", function(d) { return scaleX(d.x)+margin; })\r\n    .attr(\"cy\", function(d) { return scaleY(d.y)+margin; });\r\n\r\n\r\nBB2B1 =[B,B2,B1]\r\n\r\nfunction drawLines(coor){\r\n    rD = coor,\r\n        d1 = [];\r\n\r\n    for (n = 0; n <rD.length; n++)\r\n        d1.push({x:scaleX(rD[n].x)+margin, y:scaleY(rD[n].y)+margin});\r\n\r\n\r\n///\r\n    var line = d3.svg.line()\r\n        .x(function(d){return d.x;})\r\n        .y(function(d){return d.y;});\r\n\r\n    var g = svg.append(\"g\");\r\n    g.append(\"path\")\r\n        .attr(\"d\", line(d1))\r\n        .style(\"stroke\", \"steelblue\")\r\n        .style(\"stroke-width\", 2);\r\n\r\n// добавляем отметки к точкам\r\n    svg.selectAll(\".dot\")\r\n        .data(rD)\r\n        .enter().append(\"circle\")\r\n        .attr(\"class\", \"dot\")\r\n        .attr(\"r\", 5.5)\r\n        .attr(\"cx\", function(d) { return scaleX(d.x)+margin; })\r\n        .attr(\"cy\", function(d) { return scaleY(d.y)+margin; });\r\n}\r\ndrawLines(BB2B1)\r\nA2B2H2 = [A2,B2,H2]\r\ndrawLines((A2B2H2))\r\n\r\nA2C = [A2,C]\r\ndrawLines(A2C)\r\nCC1 = [C,C1]\r\nCC2 = [C,C2]\r\ndrawLines(CC1)\r\ndrawLines(CC2)\r\n\r\n\r\n\r\n\r\nfunction drawCurve(coor){\r\n    rD = coor,\r\n        d1 = [];\r\n\r\n    for (n = 0; n <rD.length; n++)\r\n        d1.push({x:scaleX(rD[n].x)+margin, y:scaleY(rD[n].y)+margin});\r\n\r\n\r\n///\r\n    var line = d3.svg.line()\r\n        .x(function(d){return d.x;})\r\n        .y(function(d){return d.y;})\r\n        .curve(d3.curveBasis);\r\n\r\n    var g = svg.append(\"g\");\r\n    g.append(\"path\")\r\n        .attr(\"d\", line(d1))\r\n        .style(\"stroke\", \"steelblue\")\r\n        .style(\"stroke-width\", 2);\r\n\r\n\r\n}\r\n/*\r\nAoC1 = [A,B,C1];\r\ndrawCurve(AoC1);\r\n\r\nvar canvas = document.getElementById(\"canvas\");\r\nvar ctx = canvas.getContext(\"2d\");\r\n\r\nctx.beginPath();\r\nctx.moveTo(50,20);\r\nctx.bezierCurveTo(230, 30, 150, 60, 50, 100);\r\nctx.stroke();\r\n\r\nctx.fillStyle = 'blue';\r\n// начальная точка\r\nctx.fillRect(50, 20, 10, 10);\r\n// конечная точка\r\nctx.fillRect(50, 100, 10, 10);\r\n\r\nctx.fillStyle = 'red';\r\n// первая контрольная точка\r\nctx.fillRect(230, 30, 10, 10);\r\n// вторая контрольная точка\r\nctx.fillRect(150, 70, 10, 10);\r\n\r\n\r\nvar path = d3.path();\r\n\r\npath.moveTo(25,25);\r\npath.lineTo(75,25);\r\npath.lineTo(75,75);\r\npath.closePath();\r\nd3.select(\"#demoPath1\")\r\n    .append(\"path\")\r\n    .attr(\"d\", path)\r\n    .attr(\"stroke\", \"black\")\r\n    .attr(\"fill\", \"red\");\r\n\r\n\r\n*/\r\n\r\n/*\r\n\r\n\r\n\r\nheight = DI+10\r\nwidth = OB+11\r\nA = (0;10)\r\nAA1 = 0.5*OB +1 //ширина полотна сверху\r\nHH1 = AA1 // ширина полотна снизу\r\nAH = DI //длина изделия\r\nA1H1 = DI //длина изделия\r\n// должен получиться квадрат\r\nA2 = 0.5*AA1 //центральная вертикальная линия\r\n//провести перпендикулярную линию от А2 до линии НН1. На линии H поставить точку H2\r\n\r\nAB = VB //высота бедер\r\n// провести горизонтальную линию. Поставить точки B1, B2\r\n\r\nA2C = 1 //провести перпендикуляр от точки А2 до С. значение может варьироваться от 0.5 до 1.5 см\r\n\r\n\r\n//рассчет вытачек\r\nfull_additions = (OB - OT)/2\r\nside_additions = full_additions/2\r\nCC1 = A2C+side_additions/2\r\nCC2 = A2C-side_additions/2\r\n//провести плавные линии C1B2 и C2B2\r\n//провести плавные линии AC1 и A1C2\r\n\r\n//добавить подписи задняя и передняя половина юбки, боковой шов\r\nbackward_addition = side_additions*0.6\r\nforward_addition = side_additions-backward_additio\r\n*/"],"names":[],"version":3,"file":"main.25fe536c.js.map","sourceRoot":"/__parcel_source_root/"}